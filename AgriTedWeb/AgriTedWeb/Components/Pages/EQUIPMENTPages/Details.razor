@page "/equipments/details"
@using Microsoft.EntityFrameworkCore
@using DataAccess
@inject IDbContextFactory<AgriTedWeb.Data.AgriTedWebContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>EQUIPMENT</h2>
    <hr />
    @if (equipment is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Type</dt>
            <dd class="col-sm-10">@equipment.Type</dd>
            <dt class="col-sm-2">Price</dt>
            <dd class="col-sm-10">@equipment.Price</dd>
        </dl>
        <div>
            <a href="@($"/equipments/edit?equipmentid={equipment.EquipmentId}")" class="btn btn-outline-warning">Edit</a> |
            <a href="@($"/equipments")" class="btn btn-outline-secondary">Back to List</a>
        </div>
    }
</div>

@code {
    private EQUIPMENT? equipment;

    [SupplyParameterFromQuery]
    private int EquipmentId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        equipment = await context.EQUIPMENT.FirstOrDefaultAsync(m => m.EquipmentId == EquipmentId);

        if (equipment is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
